1
00:00:03,141 --> 00:00:04,520
Welcome back.

2
00:00:04,520 --> 00:00:08,380
Now that you're becoming proficient
at solving problems in Java it is

3
00:00:08,380 --> 00:00:12,985
time to talk about some aspects of Java
that will help you solve larger problems.

4
00:00:12,985 --> 00:00:16,480
You've probably heard that Java is
an object oriented language but

5
00:00:16,480 --> 00:00:18,490
what exactly does that mean?

6
00:00:18,490 --> 00:00:22,780
As the name suggests, your code works with
objects which you've already been doing

7
00:00:22,780 --> 00:00:26,880
with objects from a wide variety of types,
strings, image resources,

8
00:00:26,880 --> 00:00:30,180
and CSV records, just to name a few.

9
00:00:30,180 --> 00:00:34,130
One of the important characteristics of
objects is that they encapsulate code and

10
00:00:34,130 --> 00:00:37,740
data, putting them together
into one logical unit.

11
00:00:37,740 --> 00:00:41,872
You have already written methods,
which are the code in an object.

12
00:00:41,872 --> 00:00:43,610
However, you've not yet

13
00:00:43,610 --> 00:00:47,940
made your own fields which describe
the data within an object.

14
00:00:47,940 --> 00:00:53,700
As a familiar example, think about
strings which you have worked with a lot.

15
00:00:53,700 --> 00:00:57,720
A string is an object and
it encapsulates code and data together.

16
00:00:57,720 --> 00:01:01,650
For a string, the data is the sequence
of characters which it represents.

17
00:01:01,650 --> 00:01:05,610
These characters are logically
inside of the string object.

18
00:01:05,610 --> 00:01:09,885
You can also call a lot of different
methods on a string to operate on it and

19
00:01:09,885 --> 00:01:11,790
not on the data inside of it.

20
00:01:11,790 --> 00:01:17,090
You are familiar with many methods in
string such as indexOf and substring.

21
00:01:17,090 --> 00:01:20,420
As you learn a bit more about
object oriented programming,

22
00:01:20,420 --> 00:01:23,210
it is useful to be
precise with terminology.

23
00:01:23,210 --> 00:01:26,670
A class defines a type,
specifically what fields and

24
00:01:26,670 --> 00:01:29,700
methods are inside of
objects of that type.

25
00:01:29,700 --> 00:01:31,740
Objects are instances of a class.

26
00:01:31,740 --> 00:01:36,990
You can make many different objects from
the same class, which you do with new.

27
00:01:36,990 --> 00:01:38,580
You have seen new before and

28
00:01:38,580 --> 00:01:43,570
learned that you use it to make things,
but now you can be a bit more precise.

29
00:01:43,570 --> 00:01:45,860
New creates a new instance of an object.

30
00:01:46,930 --> 00:01:49,360
So why use an object oriented language?

31
00:01:49,360 --> 00:01:51,870
What is the point of classes and objects?

32
00:01:51,870 --> 00:01:55,930
A long time ago programming language
designers realized that it was helpful for

33
00:01:55,930 --> 00:01:58,640
programmers to be able to
think in terms of objects

34
00:01:58,640 --> 00:02:02,800
as they correspond more naturally
to how you think about the world.

35
00:02:02,800 --> 00:02:07,240
They designed object oriented languages
around this idea along with a variety of

36
00:02:07,240 --> 00:02:11,950
features which help programmers design and
write large programs.

37
00:02:11,950 --> 00:02:16,230
You're going to learn some basic features
of object oriented programming here so

38
00:02:16,230 --> 00:02:20,940
that you can create your own
classes with both code and data.

39
00:02:20,940 --> 00:02:25,570
If you continue onwards to take our Java
Programming: Principles of Software Design

40
00:02:25,570 --> 00:02:28,820
course after this,
you will learn some more principles and

41
00:02:28,820 --> 00:02:31,370
techniques of object oriented programming.

42
00:02:31,370 --> 00:02:32,510
So let's dive right in.