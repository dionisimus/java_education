All right. Now you've devised the algorithm
to count the unique IP addresses in a web server log. So, it's time to turn it into code. As usual, we have here
the outline of this method with the pseudo code that
you've just developed. The first thing we wanna do is make
unique IPs which starts as an empty list. So, we're going to have
an array list of strings. And we're going to call it unique IPs. And it's going to be
a new empty array list. Now, we want to do something for
each element, which we'll call LE in our records. So, as you're familiar with by now,
this is a for each style, for loop. Each of these is going to be a log entry. And remember that records,
even though we don't have a records variable in here,
is an instance variable in our class. So, we're going to take
each log entry in records. And then, we're going to get
to the IP address out of it. And then we wanna know if IP address is or
is not in unique IPs. So, we're going to say if uniqueIps.contains IP address. But we want not that,
that is the opposite. So, we're going to put a not in front. Then we want to add IP
address to unique IPs, uniqueIPs.add IP address. Close that. Close that. And then at the end here, it says we want to return unique IPs.size. Now, my braces have ended up
in slightly weird places. That's probably just because I
have some braces in my comments. So, I'm going to delete those and then
try to make sure my code lines up nicely. Okay. So, now I'm gonna hit compile. Those class compiled, no syntax errors. Of course, we want to test this. I've all ready written a tester here,
which is going to create a new log in analyzer, read in short test log,
which is this log file here. It has this IP address. The same IP address appears three times,
we've only seen two unique IP addresses. We have a third, and we have a fourth. All right.
Then it uses the LogAnalyzer to count unique IPs,
to count the unique IPs like we just did. And then it prints out how many there are. So, I'm gonna go over here to BlueJ. I am going to make a new unique IP tester. And I'm going to run test unique IPs. And it prints out there are four IPs,
which is the result that we expected. So, we're more confident
that our code is correct.