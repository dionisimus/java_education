1
00:00:00,000 --> 00:00:06,567
[MUSIC]

2
00:00:06,567 --> 00:00:08,450
Hi, I'm Mia Minnes.

3
00:00:08,450 --> 00:00:09,410
>> I'm Leo Porter.

4
00:00:09,410 --> 00:00:10,900
>> And I'm Christine Alvarado.

5
00:00:10,900 --> 00:00:14,560
We're back with the second course in
our intermediate Java programming

6
00:00:14,560 --> 00:00:15,970
specialization.

7
00:00:15,970 --> 00:00:18,110
Some of you were with us for
our first course, and

8
00:00:18,110 --> 00:00:20,660
if you were, wasn't that a cool project?

9
00:00:20,660 --> 00:00:22,590
Others here are just joining us for
the first time.

10
00:00:22,590 --> 00:00:24,210
Either way, welcome.

11
00:00:24,210 --> 00:00:26,220
>> If you were with us for
that first course,

12
00:00:26,220 --> 00:00:29,030
you've already seem a glimpse of
the importance of performance and

13
00:00:29,030 --> 00:00:33,230
efficiency in your code even when you were
working with just moderate size data sets.

14
00:00:33,230 --> 00:00:36,220
What we're going to do in this
course is push that even further and

15
00:00:36,220 --> 00:00:40,259
think about how data structures can help
us both measure and optimize performance.

16
00:00:41,430 --> 00:00:44,620
>> We'll begin by learning how to perform
a high level analysis of an algorithm,

17
00:00:44,620 --> 00:00:46,466
we'll then apply that to data structures.

18
00:00:46,466 --> 00:00:49,820
Specifically, we're gonna be looking at
data structures ability to search for

19
00:00:49,820 --> 00:00:53,550
information, to add new information and
to remove existing information.

20
00:00:54,680 --> 00:00:58,030
In the process of this analysis, we're
gonna look closely at a number of core

21
00:00:58,030 --> 00:01:02,420
data structures and abstract data types,
including linked lists, queues, trees,

22
00:01:02,420 --> 00:01:05,630
binary search trees,
tries and hash tables.

23
00:01:05,630 --> 00:01:09,740
And we're gonna go beyond just
the high-level analysis to also look at

24
00:01:09,740 --> 00:01:12,140
how does this actually
perform on a real system.

25
00:01:12,140 --> 00:01:15,350
And lastly, we'll help you have more
confidence in your codes correctness

26
00:01:15,350 --> 00:01:17,170
by learning more about testing.

27
00:01:17,170 --> 00:01:20,570
>> And all of this will be in
the context of a really cool project.

28
00:01:20,570 --> 00:01:24,110
So you'll be building a text editor that
has some really modern functionality

29
00:01:24,110 --> 00:01:25,170
built into it.

30
00:01:25,170 --> 00:01:27,870
In particular,
you'll be building spell check and

31
00:01:27,870 --> 00:01:31,250
also auto-complete, which is a feature
that I use all the time, for

32
00:01:31,250 --> 00:01:35,000
example, when typing strings
into the Google search bar.

33
00:01:35,000 --> 00:01:36,430
In addition to those functionalities,

34
00:01:36,430 --> 00:01:39,640
you'll also be implementing some
games as part of your text editor.

35
00:01:39,640 --> 00:01:42,410
One of those will help you
determine the readability or

36
00:01:42,410 --> 00:01:45,800
how easy it is to read a piece of text,
and also a game for

37
00:01:45,800 --> 00:01:50,150
going from one word to another,
just by modifying one character at a time.

38
00:01:50,150 --> 00:01:51,330
>> Yeah, that's a really fun game.

39
00:01:51,330 --> 00:01:54,100
But it also turns out it's gonna
illustrate a problem which is

40
00:01:54,100 --> 00:01:57,650
really central to many fields in
computer science and related fields,

41
00:01:57,650 --> 00:02:00,968
like computational biology and
machine translation.

42
00:02:00,968 --> 00:02:04,300
So, this project-based approach isn't
the only thing you'll recognize

43
00:02:04,300 --> 00:02:06,160
from our first tours if you took it.

44
00:02:06,160 --> 00:02:07,710
We're also bringing back the ability for

45
00:02:07,710 --> 00:02:10,660
you to choose your own
path through this course.

46
00:02:10,660 --> 00:02:15,250
So you'll be able to use the resources
we provide to customize your experience,

47
00:02:15,250 --> 00:02:17,330
getting the help you
need when you need it and

48
00:02:17,330 --> 00:02:19,890
challenging yourself to your own level.

49
00:02:19,890 --> 00:02:25,120
We want you to be successful on the
project and the end of module assessments.

50
00:02:25,120 --> 00:02:28,730
So be sure to check out my video that
talks about how to use the features of

51
00:02:28,730 --> 00:02:30,240
the course to customize your own path.

52
00:02:31,370 --> 00:02:34,640
>> Regardless of the path that you take
through the course, the skills and

53
00:02:34,640 --> 00:02:37,690
the data structures that you'll learn
in this course will help you solve

54
00:02:37,690 --> 00:02:39,740
a number of problems as
a software engineer, and

55
00:02:39,740 --> 00:02:42,040
are essentially core information for
any computer scientist.

56
00:02:42,040 --> 00:02:44,230
So without further ado, let's get started.